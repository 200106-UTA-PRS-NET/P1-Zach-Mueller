# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  pathtosolution: 'PizzaWebApp/'
  pathtoproject: 'PizzaWebApp/PizzaWebApp'
  pathtotest: 'PizzaWebApp/PizzaWebAppTest'



steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'PizzaWebService'
    organization: 'objectorientedpizza'
    scannerMode: 'MSBuild'
    projectKey: 'objectorientedpizza'
    projectName: 'PizzaWebApp'
    extraProperties: 
      sonar.cs.opencover.reportsPaths="$(Build.ArtifactStagingDirectory)/coverage/*"
      sonar.cs.vstest.reportsPaths="$(Build.ArtifactStagingDirectory)/test/*.trx"
      sonar.exclusions=**/wwwroot/lib/**/*
  

- script:
    dotnet build --configuration $(buildConfiguration)
  workingDirectory: $(pathtosolution)
  displayName: 'dotnet build $(buildConfiguration)'


- script: dotnet test
    --configuration $(buildConfiguration)
    -- logger trx
    -- no-build
    --results-directory $(Build.ArtifactStagingDirectory)/test
    /p:CollectCoverage=true
  workingDirectory: $(pathtosolution)
  displayName: 'dotnet test'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(pathtotest)'
    workingDirectory: '$(pathtosolution)'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'


- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    arguments: --configuration $(buildConfiguration)
    publishWebProjects: true
    zipAfterPublish: true
    workingDirectory: '$(pathtosolution)'
  displayName: 'dotnet publish + zip'
####--- CI END

## CDelivery Start taking artifact as an input
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Visual Studio Enterprise with MSDN(581982a8-2cbb-485e-b313-4da4b27d42f1)'
    appType: 'webAppLinux'
    appName: 'PizzaDb'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'

    ## CD ends

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'PizzaWebService'
    organization: 'objectorientedpizza'
    scannerMode: 'MSBuild'
    projectKey: 'objectorientedpizza'
    projectName: 'PizzaWebApp'